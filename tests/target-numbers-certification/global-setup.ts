import { chromium, FullConfig } from '@playwright/test';

/**
 * Setup global para tests de certificaci√≥n de n√∫meros objetivo
 * Prepara el entorno de pruebas antes de ejecutar todos los tests
 */
async function globalSetup(config: FullConfig) {
  console.log('üöÄ Iniciando setup global para certificaci√≥n de n√∫meros objetivo...');
  
  const browser = await chromium.launch();
  const context = await browser.newContext();
  const page = await context.newPage();

  try {
    // Verificar que la aplicaci√≥n est√© disponible
    console.log('üîç Verificando disponibilidad de la aplicaci√≥n en localhost:8000...');
    await page.goto('http://localhost:8000', { timeout: 60000 });
    
    // Verificar que la p√°gina principal cargue correctamente
    await page.waitForSelector('body', { timeout: 30000 });
    console.log('‚úÖ Aplicaci√≥n KRONOS disponible y respondiendo');

    // Verificar que la base de datos tenga datos
    console.log('üóÑÔ∏è Verificando disponibilidad de datos de prueba...');
    
    // Navegar a misiones para verificar que exista mission_MPFRBNsb
    await page.click('text=Misiones');
    await page.waitForSelector('table', { timeout: 30000 });
    
    // Buscar la misi√≥n espec√≠fica
    const missionExists = await page.locator('text=mission_MPFRBNsb').first().isVisible();
    if (!missionExists) {
      throw new Error('‚ùå Misi√≥n mission_MPFRBNsb no encontrada. Verificar datos de prueba.');
    }
    
    console.log('‚úÖ Misi√≥n mission_MPFRBNsb encontrada');
    console.log('‚úÖ Setup global completado exitosamente');
    
  } catch (error) {
    console.error('‚ùå Error en setup global:', error);
    throw error;
  } finally {
    await browser.close();
  }
}

export default globalSetup;